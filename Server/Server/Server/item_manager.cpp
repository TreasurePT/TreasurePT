#include "stdafx.h"
#include "item_manager.h"

void CItemManager::BuildItems( )
{
	m_Item_Address = ( long )( VirtualAlloc( nullptr, ( NUMBER_OF_ITEMS + 1 ) * 0x314,
		MEM_COMMIT | MEM_RESERVE, PAGE_READWRITE ) );
	m_Number_of_Items = 0;

	//TODO: Novos Items


	ReferenceItems( );
};

void CItemManager::ReferenceItems( )
{
	WriteMemory( 0x00415E17, ( DWORD )m_Item_Address );
	WriteMemory( 0x00417090, ( DWORD )m_Item_Address );
	WriteMemory( 0x0041E5F9, ( DWORD )m_Item_Address );
	WriteMemory( 0x0041FD7B, ( DWORD )m_Item_Address );
	WriteMemory( 0x0041FDBB, ( DWORD )m_Item_Address );
	WriteMemory( 0x0042A15C, ( DWORD )m_Item_Address );
	WriteMemory( 0x0042E067, ( DWORD )m_Item_Address );
	WriteMemory( 0x0042E0A3, ( DWORD )m_Item_Address );
	WriteMemory( 0x0043686C, ( DWORD )m_Item_Address );
	WriteMemory( 0x00438A7C, ( DWORD )m_Item_Address );
	WriteMemory( 0x00438D6E, ( DWORD )m_Item_Address );
	WriteMemory( 0x00438F04, ( DWORD )m_Item_Address );
	WriteMemory( 0x0043901F, ( DWORD )m_Item_Address );
	WriteMemory( 0x004390C5, ( DWORD )m_Item_Address );
	WriteMemory( 0x00439165, ( DWORD )m_Item_Address );
	WriteMemory( 0x00442A1F, ( DWORD )m_Item_Address );
	WriteMemory( 0x0044FCE9, ( DWORD )m_Item_Address );
	WriteMemory( 0x00480CCF, ( DWORD )m_Item_Address );
	WriteMemory( 0x00480D45, ( DWORD )m_Item_Address );
	WriteMemory( 0x00485918, ( DWORD )m_Item_Address );
	WriteMemory( 0x00485994, ( DWORD )m_Item_Address );
	WriteMemory( 0x0048E63A, ( DWORD )m_Item_Address );
	WriteMemory( 0x0048E65E, ( DWORD )m_Item_Address );
	WriteMemory( 0x0048E844, ( DWORD )m_Item_Address );
	WriteMemory( 0x0048E866, ( DWORD )m_Item_Address );
	WriteMemory( 0x0048EE0A, ( DWORD )m_Item_Address );
	WriteMemory( 0x0048EE2E, ( DWORD )m_Item_Address );
	WriteMemory( 0x00498945, ( DWORD )m_Item_Address );
	WriteMemory( 0x0049896F, ( DWORD )m_Item_Address );
	WriteMemory( 0x004A47D3, ( DWORD )m_Item_Address );
	WriteMemory( 0x004A4826, ( DWORD )m_Item_Address );
	WriteMemory( 0x004A4870, ( DWORD )m_Item_Address );
	WriteMemory( 0x004A49CD, ( DWORD )m_Item_Address );
	WriteMemory( 0x004A4A3C, ( DWORD )m_Item_Address );
	WriteMemory( 0x004BB844, ( DWORD )m_Item_Address );
	WriteMemory( 0x004BB8FC, ( DWORD )m_Item_Address );
	WriteMemory( 0x004BB94F, ( DWORD )m_Item_Address );
	WriteMemory( 0x004BB97C, ( DWORD )m_Item_Address );
	WriteMemory( 0x004BE3D7, ( DWORD )m_Item_Address );
	WriteMemory( 0x004BE407, ( DWORD )m_Item_Address );
	WriteMemory( 0x004C1954, ( DWORD )m_Item_Address );
	WriteMemory( 0x004C1E30, ( DWORD )m_Item_Address );
	WriteMemory( 0x0054801D, ( DWORD )m_Item_Address );
	WriteMemory( 0x005594F3, ( DWORD )m_Item_Address );
	WriteMemory( 0x0055B672, ( DWORD )m_Item_Address );
	WriteMemory( 0x005819FB, ( DWORD )m_Item_Address );
	WriteMemory( 0x0043683B, ( DWORD )m_Item_Address + 0x24 );
	WriteMemory( 0x00438A50, ( DWORD )m_Item_Address + 0x24 );
	WriteMemory( 0x00438D38, ( DWORD )m_Item_Address + 0x24 );
	WriteMemory( 0x00438ED3, ( DWORD )m_Item_Address + 0x24 );
	WriteMemory( 0x00438FE8, ( DWORD )m_Item_Address + 0x24 );
	WriteMemory( 0x00439092, ( DWORD )m_Item_Address + 0x24 );
	WriteMemory( 0x00439132, ( DWORD )m_Item_Address + 0x24 );
	WriteMemory( 0x0043B3E4, ( DWORD )m_Item_Address + 0x24 );
	WriteMemory( 0x0044FCB6, ( DWORD )m_Item_Address + 0x24 );
	WriteMemory( 0x00480CEE, ( DWORD )m_Item_Address + 0x24 );
	WriteMemory( 0x00480D6B, ( DWORD )m_Item_Address + 0x24 );
	WriteMemory( 0x0048594E, ( DWORD )m_Item_Address + 0x24 );
	WriteMemory( 0x0048E686, ( DWORD )m_Item_Address + 0x24 );
	WriteMemory( 0x0048E88A, ( DWORD )m_Item_Address + 0x24 );
	WriteMemory( 0x0048EE55, ( DWORD )m_Item_Address + 0x24 );
	WriteMemory( 0x004A47F5, ( DWORD )m_Item_Address + 0x24 );
	WriteMemory( 0x004A4849, ( DWORD )m_Item_Address + 0x24 );
	WriteMemory( 0x004A49F8, ( DWORD )m_Item_Address + 0x24 );
	WriteMemory( 0x004BB926, ( DWORD )m_Item_Address + 0x24 );
	WriteMemory( 0x004BE248, ( DWORD )m_Item_Address + 0x24 );
	WriteMemory( 0x004BE300, ( DWORD )m_Item_Address + 0x24 );
	WriteMemory( 0x004C1976, ( DWORD )m_Item_Address + 0x24 );
	WriteMemory( 0x004C1E5E, ( DWORD )m_Item_Address + 0x24 );
	WriteMemory( 0x005594C1, ( DWORD )m_Item_Address + 0x24 );
	WriteMemory( 0x00485982, ( DWORD )m_Item_Address + 0x34 );
	WriteMemory( 0x0048E75E, ( DWORD )m_Item_Address + 0x34 );
	WriteMemory( 0x0048E95B, ( DWORD )m_Item_Address + 0x34 );
	WriteMemory( 0x004C1E52, ( DWORD )m_Item_Address + 0x34 );
	WriteMemory( 0x004C1EEF, ( DWORD )m_Item_Address + 0x34 );
	WriteMemory( 0x0048598B, ( DWORD )m_Item_Address + 0x38 );
	WriteMemory( 0x0048E76A, ( DWORD )m_Item_Address + 0x38 );
	WriteMemory( 0x0048E961, ( DWORD )m_Item_Address + 0x38 );
	WriteMemory( 0x004C1E58, ( DWORD )m_Item_Address + 0x38 );
	WriteMemory( 0x004C1EE3, ( DWORD )m_Item_Address + 0x38 );
	WriteMemory( 0x00480CF5, ( DWORD )m_Item_Address + 0x3C );
	WriteMemory( 0x00480D72, ( DWORD )m_Item_Address + 0x3C );
	WriteMemory( 0x00485955, ( DWORD )m_Item_Address + 0x3C );
	WriteMemory( 0x0048E68D, ( DWORD )m_Item_Address + 0x3C );
	WriteMemory( 0x0048E891, ( DWORD )m_Item_Address + 0x3C );
	WriteMemory( 0x0048EE5C, ( DWORD )m_Item_Address + 0x3C );
	WriteMemory( 0x004A47FC, ( DWORD )m_Item_Address + 0x3C );
	WriteMemory( 0x004A4850, ( DWORD )m_Item_Address + 0x3C );
	WriteMemory( 0x004A49FF, ( DWORD )m_Item_Address + 0x3C );
	WriteMemory( 0x004BB931, ( DWORD )m_Item_Address + 0x3C );
	WriteMemory( 0x004C197D, ( DWORD )m_Item_Address + 0x3C );
	WriteMemory( 0x004C1E65, ( DWORD )m_Item_Address + 0x3C );
	WriteMemory( 0x0041E628, ( DWORD )m_Item_Address + 0x7C );
	WriteMemory( 0x00490A4D, ( DWORD )m_Item_Address + 0x7C );
	WriteMemory( 0x00548042, ( DWORD )m_Item_Address + 0x7C );
	WriteMemory( 0x0055B798, ( DWORD )m_Item_Address + 0x7C );
	WriteMemory( 0x004BB865, ( DWORD )m_Item_Address + 0x80 );
	WriteMemory( 0x00480D08, ( DWORD )m_Item_Address + 0xFC );
	WriteMemory( 0x00480D22, ( DWORD )m_Item_Address + 0xFC );
	WriteMemory( 0x00480D28, ( DWORD )m_Item_Address + 0xFC );
	WriteMemory( 0x00480D85, ( DWORD )m_Item_Address + 0xFC );
	WriteMemory( 0x00480D9F, ( DWORD )m_Item_Address + 0xFC );
	WriteMemory( 0x00480DA5, ( DWORD )m_Item_Address + 0xFC );
	WriteMemory( 0x00480DD5, ( DWORD )m_Item_Address + 0xFC );
	WriteMemory( 0x004851AF, ( DWORD )m_Item_Address + 0xFC );
	WriteMemory( 0x00485976, ( DWORD )m_Item_Address + 0xFC );
	WriteMemory( 0x0048E6A7, ( DWORD )m_Item_Address + 0xFC );
	WriteMemory( 0x0048E6C4, ( DWORD )m_Item_Address + 0xFC );
	WriteMemory( 0x0048E71A, ( DWORD )m_Item_Address + 0xFC );
	WriteMemory( 0x0048E764, ( DWORD )m_Item_Address + 0xFC );
	WriteMemory( 0x0048E781, ( DWORD )m_Item_Address + 0xFC );
	WriteMemory( 0x0048E8AB, ( DWORD )m_Item_Address + 0xFC );
	WriteMemory( 0x0048E8C8, ( DWORD )m_Item_Address + 0xFC );
	WriteMemory( 0x0048E918, ( DWORD )m_Item_Address + 0xFC );
	WriteMemory( 0x0048E967, ( DWORD )m_Item_Address + 0xFC );
	WriteMemory( 0x0048E97E, ( DWORD )m_Item_Address + 0xFC );
	WriteMemory( 0x0048EE76, ( DWORD )m_Item_Address + 0xFC );
	WriteMemory( 0x0048EE93, ( DWORD )m_Item_Address + 0xFC );
	WriteMemory( 0x0048EE99, ( DWORD )m_Item_Address + 0xFC );
	WriteMemory( 0x004A488C, ( DWORD )m_Item_Address + 0xFC );
	WriteMemory( 0x004A4892, ( DWORD )m_Item_Address + 0xFC );
	WriteMemory( 0x004A48BE, ( DWORD )m_Item_Address + 0xFC );
	WriteMemory( 0x004A48C4, ( DWORD )m_Item_Address + 0xFC );
	WriteMemory( 0x004A4A16, ( DWORD )m_Item_Address + 0xFC );
	WriteMemory( 0x004A4A30, ( DWORD )m_Item_Address + 0xFC );
	WriteMemory( 0x004A4A36, ( DWORD )m_Item_Address + 0xFC );
	WriteMemory( 0x004BB9C7, ( DWORD )m_Item_Address + 0xFC );
	WriteMemory( 0x004BB9F1, ( DWORD )m_Item_Address + 0xFC );
	WriteMemory( 0x004BBA11, ( DWORD )m_Item_Address + 0xFC );
	WriteMemory( 0x004BBA17, ( DWORD )m_Item_Address + 0xFC );
	WriteMemory( 0x004C1990, ( DWORD )m_Item_Address + 0xFC );
	WriteMemory( 0x004C19AA, ( DWORD )m_Item_Address + 0xFC );
	WriteMemory( 0x004C19CF, ( DWORD )m_Item_Address + 0xFC );
	WriteMemory( 0x004C1A03, ( DWORD )m_Item_Address + 0xFC );
	WriteMemory( 0x004C1A09, ( DWORD )m_Item_Address + 0xFC );
	WriteMemory( 0x004C1E88, ( DWORD )m_Item_Address + 0xFC );
	WriteMemory( 0x004C1EA2, ( DWORD )m_Item_Address + 0xFC );
	WriteMemory( 0x004C1EE9, ( DWORD )m_Item_Address + 0xFC );
	WriteMemory( 0x004C1F27, ( DWORD )m_Item_Address + 0xFC );
	WriteMemory( 0x004C1F48, ( DWORD )m_Item_Address + 0xFC );
	WriteMemory( 0x00490C87, ( DWORD )m_Item_Address + 0x118 );
	WriteMemory( 0x00415E2D, ( DWORD )m_Item_Address + ( m_Number_of_Items * 0x314 ) - 4 );
	WriteMemory( 0x0041E60B, ( DWORD )m_Item_Address + ( m_Number_of_Items * 0x314 ) - 4 );
	WriteMemory( 0x00442A54, ( DWORD )m_Item_Address + ( m_Number_of_Items * 0x314 ) - 4 );
	WriteMemory( 0x00480CDE, ( DWORD )m_Item_Address + ( m_Number_of_Items * 0x314 ) - 4 );
	WriteMemory( 0x00480D5B, ( DWORD )m_Item_Address + ( m_Number_of_Items * 0x314 ) - 4 );
	WriteMemory( 0x0048592B, ( DWORD )m_Item_Address + ( m_Number_of_Items * 0x314 ) - 4 );
	WriteMemory( 0x0048E64B, ( DWORD )m_Item_Address + ( m_Number_of_Items * 0x314 ) - 4 );
	WriteMemory( 0x0048E853, ( DWORD )m_Item_Address + ( m_Number_of_Items * 0x314 ) - 4 );
	WriteMemory( 0x0048EE1B, ( DWORD )m_Item_Address + ( m_Number_of_Items * 0x314 ) - 4 );
	WriteMemory( 0x004967A6, ( DWORD )m_Item_Address + ( m_Number_of_Items * 0x314 ) - 4 );
	WriteMemory( 0x0049895F, ( DWORD )m_Item_Address + ( m_Number_of_Items * 0x314 ) - 4 );
	WriteMemory( 0x004A47E2, ( DWORD )m_Item_Address + ( m_Number_of_Items * 0x314 ) - 4 );
	WriteMemory( 0x004A49DC, ( DWORD )m_Item_Address + ( m_Number_of_Items * 0x314 ) - 4 );
	WriteMemory( 0x004BB853, ( DWORD )m_Item_Address + ( m_Number_of_Items * 0x314 ) - 4 );
	WriteMemory( 0x004BB90B, ( DWORD )m_Item_Address + ( m_Number_of_Items * 0x314 ) - 4 );
	WriteMemory( 0x004BB9D3, ( DWORD )m_Item_Address + ( m_Number_of_Items * 0x314 ) - 4 );
	WriteMemory( 0x004C1963, ( DWORD )m_Item_Address + ( m_Number_of_Items * 0x314 ) - 4 );
	WriteMemory( 0x004C1E3F, ( DWORD )m_Item_Address + ( m_Number_of_Items * 0x314 ) - 4 );
	WriteMemory( 0x0054802C, ( DWORD )m_Item_Address + ( m_Number_of_Items * 0x314 ) - 4 );
	WriteMemory( 0x0055B693, ( DWORD )m_Item_Address + ( m_Number_of_Items * 0x314 ) - 4 );
	WriteMemory( 0x00581A53, ( DWORD )m_Item_Address + ( m_Number_of_Items * 0x314 ) - 4 );
	WriteMemory( 0x00436859, ( DWORD )m_Item_Address + ( m_Number_of_Items * 0x314 ) + 0x20 );
	WriteMemory( 0x00438A69, ( DWORD )m_Item_Address + ( m_Number_of_Items * 0x314 ) + 0x20 );
	WriteMemory( 0x00438D55, ( DWORD )m_Item_Address + ( m_Number_of_Items * 0x314 ) + 0x20 );
	WriteMemory( 0x00438EF0, ( DWORD )m_Item_Address + ( m_Number_of_Items * 0x314 ) + 0x20 );
	WriteMemory( 0x00439009, ( DWORD )m_Item_Address + ( m_Number_of_Items * 0x314 ) + 0x20 );
	WriteMemory( 0x004390AF, ( DWORD )m_Item_Address + ( m_Number_of_Items * 0x314 ) + 0x20 );
	WriteMemory( 0x0043914F, ( DWORD )m_Item_Address + ( m_Number_of_Items * 0x314 ) + 0x20 );
	WriteMemory( 0x0043B401, ( DWORD )m_Item_Address + ( m_Number_of_Items * 0x314 ) + 0x20 );
	WriteMemory( 0x0044FCD9, ( DWORD )m_Item_Address + ( m_Number_of_Items * 0x314 ) + 0x20 );
	WriteMemory( 0x004BE26B, ( DWORD )m_Item_Address + ( m_Number_of_Items * 0x314 ) + 0x20 );
	WriteMemory( 0x004BE31F, ( DWORD )m_Item_Address + ( m_Number_of_Items * 0x314 ) + 0x20 );
	WriteMemory( 0x005594D6, ( DWORD )m_Item_Address + ( m_Number_of_Items * 0x314 ) + 0x20 );
	WriteMemory( 0x004980EE, ( DWORD )m_Item_Address + ( m_Number_of_Items * 0x314 ) + 0x24 );
	WriteMemory( 0x00442BAC, ( DWORD )m_Item_Address + 1 );

	*( DWORD* )( ( DWORD )m_Item_Address + ( m_Number_of_Items * 0x314 ) ) = 0x0A;
	*( DWORD* )( ( DWORD )m_Item_Address + ( m_Number_of_Items * 0x314 ) + 4 ) = 0x64;
	*( DWORD* )( ( DWORD )m_Item_Address + ( m_Number_of_Items * 0x314 ) + 8 ) = 0x03E8;
	*( DWORD* )( ( DWORD )m_Item_Address + ( m_Number_of_Items * 0x314 ) + 0x0C ) = 0x2710;
	*( DWORD* )( ( DWORD )m_Item_Address + ( m_Number_of_Items * 0x314 ) + 0x10 ) = 0x0186A0;
	*( DWORD* )( ( DWORD )m_Item_Address + ( m_Number_of_Items * 0x314 ) + 0x14 ) = 0x0F4240;
	*( DWORD* )( ( DWORD )m_Item_Address + ( m_Number_of_Items * 0x314 ) + 0x18 ) = 0x989680;
	*( DWORD* )( ( DWORD )m_Item_Address + ( m_Number_of_Items * 0x314 ) + 0x1C ) = 0x05F5E100;
	*( DWORD* )( ( DWORD )m_Item_Address + ( m_Number_of_Items * 0x314 ) + 0x20 ) = 0x3B9ACA00;
	*( DWORD* )( ( DWORD )m_Item_Address + ( m_Number_of_Items * 0x314 ) + 0x24 ) = 0x2710;
	*( DWORD* )( ( DWORD )m_Item_Address + ( m_Number_of_Items * 0x314 ) + 0x2C ) = 0x12;
	*( DWORD* )( ( DWORD )m_Item_Address + ( m_Number_of_Items * 0x314 ) + 0x30 ) = 7;
	*( DWORD* )( ( DWORD )m_Item_Address + ( m_Number_of_Items * 0x314 ) + 0x34 ) = 0x0C;
};

void __cdecl _BuildItems( )
{
	std::shared_ptr<CItemManager> lpItem = std::make_shared<CItemManager>( );
	return lpItem->BuildItems( );
};